name: build and deploy
run-name: ${{ github.event_name }} ${{ github.ref_name }} by @${{ github.actor }}

permissions:
  contents: write
  deployments: read

on:
  push:
    branches:
      - 'main'

jobs:
  prepare-values:
    if: ${{ github.event.action == 'published' }}
    runs-on: ubuntu-latest
    outputs:
      SHORT_TAG: ${{ steps.set_output.outputs.SHORT_TAG }}
      NAMESPACE: ${{ steps.set_output.outputs.NAMESPACE }}
      APPLICATIONS: ${{ steps.set_output.outputs.APPLICATIONS }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get files changed
        id: files-changed
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: |
            .github/**
            .git/**
            .vscode/**
          separator: ","

      - name: Extract Namespace by Path Changes
        id: extract-namespace-path
        env:
          all_changed_files_list: ${{ steps.files-changed.outputs.all_changed_files }}
        run: |
          matches_path() {
            local file_path=$1
            shift
            local patterns=("$@")
            for pattern in "${patterns[@]}"; do
              if [[ $file_path =~ ${pattern//\*\*/.*} ]]; then
                return 0
              fi
            done
            return 1
          }

          # Read and parse the namespace.json file
          NAMESPACE_DATA=$(cat "$NAMESPACE_FILE")

          # Split the files list into an array
          IFS=',' read -r -a FILES_ARRAY <<< "$all_changed_files_list"

          # Iterate over namespaces and check which files belong to which namespace
          declare -A RESULT

          for namespace in $(jq -r '.namespaces | keys[]' <<< "$NAMESPACE_DATA"); do
            paths=$(jq -r ".namespaces[\"$namespace\"].paths[]" <<< "$NAMESPACE_DATA")
            for file in "${FILES_ARRAY[@]}"; do
              if matches_path "$file" $paths; then
                RESULT["$namespace"]=1
              fi
            done
          done

          IFS=$'\n' sorted_namespaces=($(sort <<<"${!RESULT[*]}"))
          unset IFS
          NAMESPACES_LIST=()
          for namespace in "${sorted_namespaces[@]}"; do
            metadata=$(jq -c ".namespaces[\"$namespace\"]" <<< "$NAMESPACE_DATA")
            NAMESPACES_LIST+=("{\"ns\": \"$namespace\", \"metadata\": $metadata}")
          done

          NAMESPACES=$(IFS=,; echo "[${NAMESPACES_LIST[*]}]")
          echo "NAMESPACES=$NAMESPACES" >> "$GITHUB_ENV"
          echo "NAMESPACES=$NAMESPACES"







      