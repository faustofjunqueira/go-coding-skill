name: deploy staging namespace
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

run-name: deploy staging ${{ inputs.NAMESPACE }} by  @${{ github.actor }}

on:
  workflow_call:
    inputs:
      NAMESPACE:
        description: "The namespace to be detected"
        type: string
        required: true
      RUNS_ON:
        description: Choose runner type.
        required: false
        type: string
        default: small-runner

jobs:
  prepare-values:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Get Applications
    runs-on: ${{ inputs.RUNS_ON }}
    outputs:
      SHORT_TAG: ${{ steps.get-applications.outputs.SHORT_TAG }}
      NAMESPACE: ${{ steps.get-applications.outputs.NAMESPACE }}
      APPLICATIONS: ${{ steps.get-applications.outputs.APPLICATIONS }}
    steps:
      - name: validate namespace
        run: |
          if [[ -z "./internal/${{ inputs.NAMESPACE }}" ]]; then
            echo "NAMESPACE input is required."
            exit 1
          fi
          if [[ ! -d "./internal/${{ inputs.NAMESPACE }}" ]]; then
            echo "Error: Namespace '${{ inputs.NAMESPACE }}' does not exist."
            exit 1
          fi
      
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: get applications
        id: get-applications
        env:
          NAMESPACE: ${{ inputs.NAMESPACE }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_OUTPUT

          # build list of applications under cmd/$NAMESPACE
          APPS=()
          for d in cmd/"$NAMESPACE"/*; do
            [ -d "$d" ] || continue
            NAME=$(basename "$d")
            APPS+=("bank-${NAMESPACE}-${NAME}")
          done
          
          # represent APPLICATIONS as a JSON array
          APPLICATIONS="["
          for app in "${APPS[@]}"; do
            APPLICATIONS+="\"$app\","
          done
          APPLICATIONS="${APPLICATIONS%,}]"  # remove trailing comma, close array
          echo "APPLICATIONS=$APPLICATIONS" >> $GITHUB_OUTPUT

      - name: set output
        env:
          NAMESPACE: ${{ inputs.NAMESPACE }}
          COMMIT_SHA: ${{ github.sha }}
          APPLICATIONS: ${{ steps.get-applications.outputs.APPLICATIONS }}
        run: |
          SHORT_TAG=${COMMIT_SHA:0:7}
          echo "SHORT_TAG=$SHORT_TAG" >> $GITHUB_OUTPUT
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_OUTPUT
          echo "APPLICATIONS=$APPLICATIONS" >> $GITHUB_OUTPUT
          
          echo "SHORT_TAG=$SHORT_TAG"
          echo "NAMESPACE=$NAMESPACE"
          echo "APPLICATIONS=$APPLICATIONS"

  
  namespace:
    name: show namespace info
    uses: ./.github/workflows/stncard_go_show_namespace_info.yaml
    needs: [prepare-values]
    with:
      RUNS_ON: ubuntu-latest
      NAMESPACE: ${{ needs.prepare-values.outputs.NAMESPACE }}
      APPLICATIONS: ${{ needs.prepare-values.outputs.APPLICATIONS }}
    secrets: inherit

  printing:
    name: print namespace info
    runs-on: ubuntu-latest
    needs: [prepare-values]
    strategy:
      fail-fast: true
      matrix:
        APPLICATION: ${{ fromJson(needs.prepare-values.outputs.APPLICATIONS) }}
    steps:
      - name: print namespace info
        run: |
          echo "NAMESPACE: ${{ needs.prepare-values.outputs.NAMESPACE }}"
          echo "APPLICATION: ${{ matrix.APPLICATION }}"