name: generate release notes
run-name: generate release notes ${{ github.ref_name }} by @${{ github.actor }}

permissions:
  contents: read
  deployments: read

on:
  push:
    tags:
      - '*/v*.*.*'

jobs:
  prepare-tag:
    runs-on: small-runner
    outputs:
      SHORT_TAG: ${{ steps.set_output.outputs.SHORT_TAG }}
      PREVIOUS_TAG: ${{ steps.set_output.outputs.PREVIOUS_TAG }}
      HOTFIXES: ${{ steps.set_output.outputs.HOTFIXES }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: find tag
        id: find_tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const script = require('./infra/gha/calculate-tag.js')
            return await script({core, context})

      - name: set-output
        id: set_output
        env:
          RESULT: ${{ steps.find_tag.outputs.result }}
        run: |
          echo "PREVIOUS_TAG=$(echo $RESULT | jq -r '.previousTag')" >> $GITHUB_OUTPUT
          echo "HOTFIXES=$(echo $RESULT | jq -r '.hotfixes')" >> $GITHUB_OUTPUT
          echo "TAG_PRD_SEMVER=$(echo $RESULT | jq -r '.tagPrdSemver')" >> $GITHUB_OUTPUT
          echo "SHORT_TAG=$(echo $RESULT | jq -r '.shortTag')" >> $GITHUB_OUTPUT

          # Debug
          echo "$RESULT"
          echo "PREVIOUS_TAG=$(echo "$RESULT" | jq -r '.previousTag')"
          echo "HOTFIXES=$(echo "$RESULT" | jq -r '.hotfixes')"
          echo "TAG_PRD_SEMVER=$(echo "$RESULT" | jq -r '.tagPrdSemver')"
          echo "SHORT_TAG=$(echo "$RESULT" | jq -r '.shortTag')"

  release-notes:
    runs-on: small-runner
    needs: [prepare-tag]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/github-script@v7
        name: create release notes
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('./infra/gha/release-notes.js')
            await script(
              {github, context, core, glob},
              "${{ needs.prepare-tag.outputs.PREVIOUS_TAG }}",
              "${{ github.ref_name }}",
              "${{ needs.prepare-tag.outputs.HOTFIXES }}",
            )
