name: Deploy on Staging
run-name: deploy stg ${{ github.event.issue.number }} by @${{ github.actor }}

on:
  issue_comment:
    types:
      - created
      - edited

permissions:
  pull-requests: write
  issues: write # Required to post comments

jobs:
  deploy-staging:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/deploy-stg' }}
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo ">> ${{github.event.comment.body}}"
          echo ">> ${{github.event.issue.pull_request}}"
          echo ">> ${{github.event.issue.number}}"

  approve-deploy:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/approve' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Comments for /deploy-stg
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.issue.number;
            const user = context.payload.comment.user.login;

            // Fetch all comments from the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const sortedComments = comments
              .filter(comment => comment.body.trim() === '/deploy-stg' || comment.body.trim() === '/approve')
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));            

            const primeDeployRequest = sortedComments.find(comment => comment.body.trim() === '/deploy-stg');

            console.log(`Prime Deploy Request: ${JSON.stringify(primeDeployRequest)}`);

            const deployRequestAmount = sortedComments.filter(comment => comment.body.trim() === '/deploy-stg').length;
            const approveAmount = sortedComments.filter(comment => comment.body.trim() === '/approve').length;
            
            console.log(`Deploy Request Amount: ${deployRequestAmount} / Approve Amount: ${approveAmount}`);